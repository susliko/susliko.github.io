<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>languages on blog</title>
    <link>https://susliko.github.io/tags/languages/</link>
    <description>Recent content in languages on blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/susliko&#34;&gt;Vasiliy Morkovkin&lt;/a&gt; 2020</copyright>
    <lastBuildDate>Wed, 01 Jul 2020 15:17:42 +0300</lastBuildDate>
    
	<atom:link href="https://susliko.github.io/tags/languages/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Concurrent approaches to concurrency</title>
      <link>https://susliko.github.io/posts/concurrency/</link>
      <pubDate>Wed, 01 Jul 2020 15:17:42 +0300</pubDate>
      
      <guid>https://susliko.github.io/posts/concurrency/</guid>
      <description>&lt;p&gt;Coroutine, fiber, goroutine, green thread, virtual thread, continuation, future, actor, generator, async/await.&lt;br&gt;
What do all of these buzzwords mean?&lt;br&gt;
What problems do they solve?
How do they relate?&lt;br&gt;
Which approaches do various languages take?&lt;br&gt;
Let&amp;rsquo;s shed a light on this! ðŸ’¡&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>